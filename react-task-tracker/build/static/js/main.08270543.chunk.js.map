{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","color","text","react_default","a","createElement","onClick","console","log","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","components_Button","Task","task","onDelete","onToggle","concat","reminder","onDoubleClick","id","index_esm","cursor","day","Tasks","tasks","Fragment","map","components_Task","key","AddTask","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setDay","_useState5","_useState6","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","components_Header","components_AddTask","Math","floor","random","newTask","objectSpread","toConsumableArray","length","components_Tasks","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.08270543.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Button = ({ color, text }) => {\n    const onClick = () => {\n        console.log('click')\n    }\n\n    return <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>{text}</button>\n    \n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport React from 'react'\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n   <header className='header'>\n        <h1>{title}</h1>\n        <Button \n        color={showAdd ? 'red' : 'pink'}\n        text={showAdd ? 'Close' : 'Add'}\n        onClick={onAdd}\n        />\n   </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n\n\n\n","import { FaTimes } from 'react-icons/fa'\nimport React from 'react'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}  /></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\nimport React from 'react'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks","import { useState } from 'react'\nimport React from 'react'\n\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if(!text) {\n      alert('Please add a task')\n      return\n    }\n      onAdd({ text, day, reminder })\n\n      setText('')\n      setDay('')\n      setReminder(false)\n    \n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n        <div className='form-control'>\n            <label>Task</label>\n            <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}  />\n        </div>\n        <div className='form-control'>\n            <label>Day & Time</label>\n            <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\n        </div>\n        <div className='form-control form-control-check'>\n            <label>Set Reminder</label>\n            <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n        </div>\n\n        <input type='submit' value='Save Task' className='btn btn-block' />\n\n    </form>\n  )\n}\n\nexport default AddTask","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport React from 'react';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks,setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Food Shopping',\n      day: 'Feb 7th at 3:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: false,\n    }\n  ])\n\n//add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n\n  //delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n\n\n  return (\n    <div className=\"container\">\n    <Header \n    onAdd={() => setShowAddTask(!showAddTask)} \n    showAdd={showAddTask} \n    />\n    {showAddTask && <AddTask onAdd={addTask} />}\n    {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks to Display')}\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}